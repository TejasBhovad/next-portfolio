/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 base_model.gltf --transform
*/

import React, { useState, useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { LoopOnce } from "three";

const Model = (props) => {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "/base_model-transformed.glb"
  );
  const { actions, names } = useAnimations(animations, group);
  // on click function
  const [clicked, click] = useState(false);
  useEffect(() => {
    if (clicked) {
      actions[names[0]].setLoop(LoopOnce, 1);
      actions[names[0]].play();
    }
  }, [clicked]);

  return (
    <group ref={group} {...props} dispose={null} onClick={() => click(true)}>
      <group name="blockbench_export">
        <group>
          <group name="root">
            <group name="head" position={[0, 0.57, 0]}>
              <group name="head_1" position={[-0.09, -0.75, 0]}>
                <mesh
                  name="mesh_0"
                  geometry={nodes.mesh_0.geometry}
                  material={nodes.mesh_0.material}
                />
                <mesh
                  name="mesh_0_1"
                  geometry={nodes.mesh_0_1.geometry}
                  material={nodes.mesh_0_1.material}
                />
              </group>
              <mesh
                name="hair"
                geometry={nodes.hair.geometry}
                material={nodes.hair.material}
                position={[-0.09, -0.75, 0]}
              />
              <group name="glasses" position={[0, -0.16, 0]}>
                <mesh
                  name="mesh_2"
                  geometry={nodes.mesh_2.geometry}
                  material={nodes.mesh_2.material}
                />
                <mesh
                  name="mesh_2_1"
                  geometry={nodes.mesh_2_1.geometry}
                  material={nodes.mesh_2_1.material}
                />
                <mesh
                  name="mesh_2_2"
                  geometry={nodes.mesh_2_2.geometry}
                  material={nodes.mesh_2_2.material}
                />
                <mesh
                  name="mesh_2_3"
                  geometry={nodes.mesh_2_3.geometry}
                  material={nodes.mesh_2_3.material}
                />
                <mesh
                  name="mesh_2_4"
                  geometry={nodes.mesh_2_4.geometry}
                  material={nodes.mesh_2_4.material}
                />
                <mesh
                  name="mesh_2_5"
                  geometry={nodes.mesh_2_5.geometry}
                  material={nodes.mesh_2_5.material}
                />
              </group>
            </group>
            <group name="left_arm" position={[-0.16, 0.56, 0]}>
              <mesh
                name="cube"
                geometry={nodes.cube.geometry}
                material={nodes.cube.material}
                position={[0.06, -0.75, 0]}
              />
            </group>
            <group name="body" position={[0, 0.41, 0]}>
              <mesh
                name="cube_1"
                geometry={nodes.cube_1.geometry}
                material={nodes.cube_1.material}
                position={[-0.09, -0.59, 0]}
              />
            </group>
            <group name="right_leg" position={[0.08, 0.25, 0]}>
              <mesh
                name="cube_2"
                geometry={nodes.cube_2.geometry}
                material={nodes.cube_2.material}
                position={[-0.17, -0.44, 0]}
              />
            </group>
            <group name="left_leg" position={[-0.08, 0.25, 0]}>
              <mesh
                name="cube_3"
                geometry={nodes.cube_3.geometry}
                material={nodes.cube_3.material}
                position={[-0.02, -0.44, 0]}
              />
            </group>
            <group name="right_arm" position={[0.16, 0.56, 0]}>
              <mesh
                name="cube_4"
                geometry={nodes.cube_4.geometry}
                material={nodes.cube_4.material}
                position={[-0.25, -0.75, 0]}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
};
export default Model;
useGLTF.preload("./base_model-transformed.glb");
